
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	18 01 00 00 fe ca 00 00 00 00 00 00 ef be ad de	r1 = -2401053092612093186 ll
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	b7 07 00 00 00 00 00 00	r7 = 0
       4:	7b 7a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r7
       5:	7b 7a e8 ff 00 00 00 00	*(u64 *)(r10 - 24) = r7
       6:	bf a6 00 00 00 00 00 00	r6 = r10
       7:	07 06 00 00 f8 ff ff ff	r6 += -8
       8:	bf a3 00 00 00 00 00 00	r3 = r10
       9:	07 03 00 00 e8 ff ff ff	r3 += -24
      10:	18 01 00 00 10 08 e0 af 00 00 00 00 dc ea 0d 00	r1 = 3917408261638160 ll
      12:	bf 62 00 00 00 00 00 00	r2 = r6
      13:	b7 04 00 00 00 00 00 00	r4 = 0
      14:	85 00 00 00 02 00 00 00	call 2
      15:	18 01 00 00 10 08 e0 af 00 00 00 00 dc ea 0d 00	r1 = 3917408261638160 ll
      17:	bf 62 00 00 00 00 00 00	r2 = r6
      18:	85 00 00 00 01 00 00 00	call 1
      19:	bf 06 00 00 00 00 00 00	r6 = r0
      20:	15 06 16 00 00 00 00 00	if r6 == 0 goto +22 <LBB0_3>

00000000000000a8 <LBB0_1>:
      21:	bf a1 00 00 00 00 00 00	r1 = r10
      22:	07 01 00 00 e8 ff ff ff	r1 += -24
      23:	0f 71 00 00 00 00 00 00	r1 += r7
      24:	bf 62 00 00 00 00 00 00	r2 = r6
      25:	0f 72 00 00 00 00 00 00	r2 += r7
      26:	71 22 00 00 00 00 00 00	r2 = *(u8 *)(r2 + 0)
      27:	73 21 00 00 00 00 00 00	*(u8 *)(r1 + 0) = r2
      28:	07 07 00 00 01 00 00 00	r7 += 1
      29:	15 07 01 00 10 00 00 00	if r7 == 16 goto +1 <LBB0_2>
      30:	05 00 f6 ff 00 00 00 00	goto -10 <LBB0_1>

00000000000000f8 <LBB0_2>:
      31:	bf a2 00 00 00 00 00 00	r2 = r10
      32:	07 02 00 00 f8 ff ff ff	r2 += -8
      33:	bf a3 00 00 00 00 00 00	r3 = r10
      34:	07 03 00 00 e8 ff ff ff	r3 += -24
      35:	18 01 00 00 10 08 e0 af 00 00 00 00 dc ea 0d 00	r1 = 3917408261638160 ll
      37:	b7 04 00 00 00 00 00 00	r4 = 0
      38:	85 00 00 00 02 00 00 00	call 2
      39:	18 01 00 00 10 08 e0 af 00 00 00 00 dc ea 0d 00	r1 = 3917408261638160 ll
      41:	bf 62 00 00 00 00 00 00	r2 = r6
      42:	85 00 00 00 03 00 00 00	call 3

0000000000000158 <LBB0_3>:
      43:	b4 00 00 00 00 00 00 00	w0 = 0
      44:	95 00 00 00 00 00 00 00	exit
