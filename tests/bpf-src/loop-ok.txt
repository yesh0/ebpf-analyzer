
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 07 00 00 00 00 00 00	r7 = 0
       1:	b7 01 00 00 00 00 00 00	r1 = 0
       2:	85 00 00 00 02 00 00 00	call 2
       3:	bf 06 00 00 00 00 00 00	r6 = r0
       4:	b7 01 00 00 64 00 00 00	r1 = 100
       5:	85 00 00 00 02 00 00 00	call 2
       6:	67 00 00 00 20 00 00 00	r0 <<= 32
       7:	77 00 00 00 20 00 00 00	r0 >>= 32
       8:	15 00 13 00 00 00 00 00	if r0 == 0 goto +19 <LBB0_7>
       9:	67 06 00 00 20 00 00 00	r6 <<= 32
      10:	c7 06 00 00 20 00 00 00	r6 s>>= 32
      11:	b7 01 00 00 00 00 00 00	r1 = 0
      12:	05 00 05 00 00 00 00 00	goto +5 <LBB0_2>

0000000000000068 <LBB0_6>:
      13:	07 01 00 00 01 00 00 00	r1 += 1
      14:	bf 12 00 00 00 00 00 00	r2 = r1
      15:	67 02 00 00 20 00 00 00	r2 <<= 32
      16:	77 02 00 00 20 00 00 00	r2 >>= 32
      17:	1d 20 0a 00 00 00 00 00	if r0 == r2 goto +10 <LBB0_7>

0000000000000090 <LBB0_2>:
      18:	bf 12 00 00 00 00 00 00	r2 = r1
      19:	67 02 00 00 20 00 00 00	r2 <<= 32
      20:	77 02 00 00 20 00 00 00	r2 >>= 32
      21:	b7 03 00 00 01 00 00 00	r3 = 1
      22:	15 02 01 00 63 00 00 00	if r2 == 99 goto +1 <LBB0_4>
      23:	b7 03 00 00 00 00 00 00	r3 = 0

00000000000000c0 <LBB0_4>:
      24:	0f 36 00 00 00 00 00 00	r6 += r3
      25:	55 02 f3 ff 64 00 00 00	if r2 != 100 goto -13 <LBB0_6>
      26:	73 76 00 00 00 00 00 00	*(u8 *)(r6 + 0) = r7
      27:	05 00 f1 ff 00 00 00 00	goto -15 <LBB0_6>

00000000000000e0 <LBB0_7>:
      28:	b7 00 00 00 00 00 00 00	r0 = 0
      29:	95 00 00 00 00 00 00 00	exit
