
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b4 07 00 00 00 00 00 00	w7 = 0
       1:	b4 01 00 00 00 00 00 00	w1 = 0
       2:	85 00 00 00 02 00 00 00	call 2
       3:	bc 06 00 00 00 00 00 00	w6 = w0
       4:	b4 01 00 00 64 00 00 00	w1 = 100
       5:	85 00 00 00 02 00 00 00	call 2
       6:	16 00 0e 00 00 00 00 00	if w0 == 0 goto +14 <LBB0_7>
       7:	bc 61 00 00 00 00 00 00	w1 = w6
       8:	67 01 00 00 20 00 00 00	r1 <<= 32
       9:	c7 01 00 00 20 00 00 00	r1 s>>= 32
      10:	b4 02 00 00 00 00 00 00	w2 = 0
      11:	05 00 02 00 00 00 00 00	goto +2 <LBB0_2>

0000000000000060 <LBB0_6>:
      12:	04 02 00 00 01 00 00 00	w2 += 1
      13:	1e 20 07 00 00 00 00 00	if w0 == w2 goto +7 <LBB0_7>

0000000000000070 <LBB0_2>:
      14:	b4 03 00 00 01 00 00 00	w3 = 1
      15:	16 02 01 00 63 00 00 00	if w2 == 99 goto +1 <LBB0_4>
      16:	b4 03 00 00 00 00 00 00	w3 = 0

0000000000000088 <LBB0_4>:
      17:	0f 31 00 00 00 00 00 00	r1 += r3
      18:	56 02 f9 ff 64 00 00 00	if w2 != 100 goto -7 <LBB0_6>
      19:	73 71 00 00 00 00 00 00	*(u8 *)(r1 + 0) = r7
      20:	05 00 f7 ff 00 00 00 00	goto -9 <LBB0_6>

00000000000000a8 <LBB0_7>:
      21:	b4 00 00 00 00 00 00 00	w0 = 0
      22:	95 00 00 00 00 00 00 00	exit
