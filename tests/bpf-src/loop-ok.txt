
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 00 00 00 00	r1 = 0
       1:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       2:	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r1
       3:	63 1a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r1
       4:	05 00 00 00 00 00 00 00	goto +0 <LBB0_1>

0000000000000028 <LBB0_1>:
       5:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
       6:	15 01 14 00 64 00 00 00	if r1 == 100 goto +20 <LBB0_8>
       7:	05 00 00 00 00 00 00 00	goto +0 <LBB0_2>

0000000000000040 <LBB0_2>:
       8:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
       9:	55 01 05 00 63 00 00 00	if r1 != 99 goto +5 <LBB0_4>
      10:	05 00 00 00 00 00 00 00	goto +0 <LBB0_3>

0000000000000058 <LBB0_3>:
      11:	79 a1 f0 ff 00 00 00 00	r1 = *(u64 *)(r10 - 16)
      12:	07 01 00 00 01 00 00 00	r1 += 1
      13:	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r1
      14:	05 00 00 00 00 00 00 00	goto +0 <LBB0_4>

0000000000000078 <LBB0_4>:
      15:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
      16:	55 01 05 00 64 00 00 00	if r1 != 100 goto +5 <LBB0_6>
      17:	05 00 00 00 00 00 00 00	goto +0 <LBB0_5>

0000000000000090 <LBB0_5>:
      18:	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 16)
      19:	b7 01 00 00 00 00 00 00	r1 = 0
      20:	73 12 00 00 00 00 00 00	*(u8 *)(r2 + 0) = r1
      21:	05 00 00 00 00 00 00 00	goto +0 <LBB0_6>

00000000000000b0 <LBB0_6>:
      22:	05 00 00 00 00 00 00 00	goto +0 <LBB0_7>

00000000000000b8 <LBB0_7>:
      23:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
      24:	07 01 00 00 01 00 00 00	r1 += 1
      25:	63 1a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r1
      26:	05 00 ea ff 00 00 00 00	goto -22 <LBB0_1>

00000000000000d8 <LBB0_8>:
      27:	b7 00 00 00 00 00 00 00	r0 = 0
      28:	95 00 00 00 00 00 00 00	exit
