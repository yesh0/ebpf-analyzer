
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	18 01 00 00 20 57 6f 72 00 00 00 00 6c 64 0a 00	r1 = 2925166706251552 ll
       2:	7b 1a f8 ff 00 00 00 00	*(u64 *)(r10 - 8) = r1
       3:	18 01 00 00 48 65 6c 6c 00 00 00 00 6f 20 20 20	r1 = 2314885871400936776 ll
       5:	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r1
       6:	bf a6 00 00 00 00 00 00	r6 = r10
       7:	07 06 00 00 f0 ff ff ff	r6 += -16
       8:	bf 61 00 00 00 00 00 00	r1 = r6
       9:	b7 02 00 00 10 00 00 00	r2 = 16
      10:	85 00 00 00 06 00 00 00	call 6
      11:	b7 01 00 00 01 00 00 00	r1 = 1
      12:	85 00 00 00 02 00 00 00	call 2
      13:	18 01 00 00 00 01 00 00 00 00 00 00 ff ff 00 00	r1 = 281470681743616 ll
      15:	85 00 00 00 02 00 00 00	call 2
      16:	67 00 00 00 20 00 00 00	r0 <<= 32
      17:	c7 00 00 00 20 00 00 00	r0 s>>= 32
      18:	b7 07 00 00 11 00 00 00	r7 = 17
      19:	b7 01 00 00 00 10 00 00	r1 = 4096
      20:	6d 01 01 00 00 00 00 00	if r1 s> r0 goto +1 <LBB0_2>
      21:	b7 07 00 00 20 00 00 00	r7 = 32

00000000000000b0 <LBB0_2>:
      22:	b7 01 00 00 21 00 00 00	r1 = 33
      23:	85 00 00 00 02 00 00 00	call 2
      24:	73 0a f5 ff 00 00 00 00	*(u8 *)(r10 - 11) = r0
      25:	bf 61 00 00 00 00 00 00	r1 = r6
      26:	bf 72 00 00 00 00 00 00	r2 = r7
      27:	85 00 00 00 06 00 00 00	call 6
      28:	b7 00 00 00 00 00 00 00	r0 = 0
      29:	95 00 00 00 00 00 00 00	exit
