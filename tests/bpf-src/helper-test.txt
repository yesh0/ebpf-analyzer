
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 63 00 00 00	r1 = 99
       1:	85 00 00 00 01 00 00 00	call 1
       2:	bf 06 00 00 00 00 00 00	r6 = r0
       3:	67 06 00 00 20 00 00 00	r6 <<= 32
       4:	bf 61 00 00 00 00 00 00	r1 = r6
       5:	77 01 00 00 20 00 00 00	r1 >>= 32
       6:	25 01 18 00 63 00 00 00	if r1 > 99 goto +24 <LBB0_3>
       7:	b7 07 00 00 00 00 00 00	r7 = 0
       8:	18 08 00 00 ff ff ff ff 00 00 00 00 00 00 00 00	r8 = 4294967295 ll
      10:	18 09 00 00 00 00 00 00 00 00 00 00 01 00 00 00	r9 = 4294967296 ll
      12:	c7 06 00 00 20 00 00 00	r6 s>>= 32

0000000000000068 <LBB0_2>:
      13:	bf 72 00 00 00 00 00 00	r2 = r7
      14:	67 02 00 00 20 00 00 00	r2 <<= 32
      15:	77 02 00 00 20 00 00 00	r2 >>= 32
      16:	37 02 00 00 1a 00 00 00	r2 /= 26
      17:	27 02 00 00 e6 ff ff ff	r2 *= -26
      18:	bf 81 00 00 00 00 00 00	r1 = r8
      19:	0f 21 00 00 00 00 00 00	r1 += r2
      20:	67 01 00 00 38 00 00 00	r1 <<= 56
      21:	18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 62	r2 = 7061644215716937728 ll
      23:	0f 21 00 00 00 00 00 00	r1 += r2
      24:	c7 01 00 00 38 00 00 00	r1 s>>= 56
      25:	85 00 00 00 02 00 00 00	call 2
      26:	67 08 00 00 20 00 00 00	r8 <<= 32
      27:	0f 98 00 00 00 00 00 00	r8 += r9
      28:	07 07 00 00 01 00 00 00	r7 += 1
      29:	c7 08 00 00 20 00 00 00	r8 s>>= 32
      30:	6d 86 ee ff 00 00 00 00	if r6 s> r8 goto -18 <LBB0_2>

00000000000000f8 <LBB0_3>:
      31:	b7 00 00 00 00 00 00 00	r0 = 0
      32:	95 00 00 00 00 00 00 00	exit
