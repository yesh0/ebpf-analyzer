
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 22 00 00 00	r1 = 34
       1:	85 00 00 00 01 00 00 00	call 1
       2:	bf 06 00 00 00 00 00 00	r6 = r0
       3:	18 01 00 00 00 00 00 00 00 00 00 00 ff ff ff 0f	r1 = 1152921500311879680 ll
       5:	85 00 00 00 01 00 00 00	call 1
       6:	b7 02 00 00 02 00 00 00	r2 = 2
       7:	67 06 00 00 20 00 00 00	r6 <<= 32
       8:	c7 06 00 00 20 00 00 00	r6 s>>= 32
       9:	b7 01 00 00 01 00 00 00	r1 = 1
      10:	6d 61 11 00 00 00 00 00	if r1 s> r6 goto +17 <LBB0_4>
      11:	b7 01 00 00 00 00 00 00	r1 = 0
      12:	18 03 00 00 00 00 00 00 00 00 00 00 01 00 00 00	r3 = 4294967296 ll
      14:	bf 04 00 00 00 00 00 00	r4 = r0
      15:	05 00 06 00 00 00 00 00	goto +6 <LBB0_3>

0000000000000080 <LBB0_2>:
      16:	67 01 00 00 20 00 00 00	r1 <<= 32
      17:	0f 31 00 00 00 00 00 00	r1 += r3
      18:	c7 01 00 00 20 00 00 00	r1 s>>= 32
      19:	bf 04 00 00 00 00 00 00	r4 = r0
      20:	b7 02 00 00 02 00 00 00	r2 = 2
      21:	7d 61 06 00 00 00 00 00	if r1 s>= r6 goto +6 <LBB0_4>

00000000000000b0 <LBB0_3>:
      22:	b7 02 00 00 05 00 00 00	r2 = 5
      23:	87 04 00 00 00 00 00 00	r4 = -r4
      24:	bf 40 00 00 00 00 00 00	r0 = r4
      25:	c7 00 00 00 01 00 00 00	r0 s>>= 1
      26:	57 04 00 00 02 00 00 00	r4 &= 2
      27:	15 04 f4 ff 00 00 00 00	if r4 == 0 goto -12 <LBB0_2>

00000000000000e0 <LBB0_4>:
      28:	15 02 02 00 05 00 00 00	if r2 == 5 goto +2 <LBB0_6>
      29:	b7 01 00 00 00 00 00 00	r1 = 0
      30:	55 02 02 00 02 00 00 00	if r2 != 2 goto +2 <LBB0_7>

00000000000000f8 <LBB0_6>:
      31:	57 00 00 00 ff ff 00 00	r0 &= 65535
      32:	bf 01 00 00 00 00 00 00	r1 = r0

0000000000000108 <LBB0_7>:
      33:	bf 10 00 00 00 00 00 00	r0 = r1
      34:	95 00 00 00 00 00 00 00	exit
