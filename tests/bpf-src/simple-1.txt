
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 22 00 00 00	r1 = 34
       1:	85 00 00 00 02 00 00 00	call 2
       2:	bf 06 00 00 00 00 00 00	r6 = r0
       3:	18 01 00 00 00 00 00 00 00 00 00 00 ff ff ff 0f	r1 = 1152921500311879680 ll
       5:	85 00 00 00 02 00 00 00	call 2
       6:	b4 02 00 00 02 00 00 00	w2 = 2
       7:	c6 06 0d 00 01 00 00 00	if w6 s< 1 goto +13 <LBB0_4>
       8:	b4 01 00 00 00 00 00 00	w1 = 0
       9:	bf 03 00 00 00 00 00 00	r3 = r0
      10:	05 00 04 00 00 00 00 00	goto +4 <LBB0_3>

0000000000000058 <LBB0_2>:
      11:	04 01 00 00 01 00 00 00	w1 += 1
      12:	bf 03 00 00 00 00 00 00	r3 = r0
      13:	b4 02 00 00 02 00 00 00	w2 = 2
      14:	7e 61 06 00 00 00 00 00	if w1 s>= w6 goto +6 <LBB0_4>

0000000000000078 <LBB0_3>:
      15:	b4 02 00 00 05 00 00 00	w2 = 5
      16:	87 03 00 00 00 00 00 00	r3 = -r3
      17:	bf 30 00 00 00 00 00 00	r0 = r3
      18:	c7 00 00 00 01 00 00 00	r0 s>>= 1
      19:	57 03 00 00 02 00 00 00	r3 &= 2
      20:	15 03 f6 ff 00 00 00 00	if r3 == 0 goto -10 <LBB0_2>

00000000000000a8 <LBB0_4>:
      21:	16 02 02 00 05 00 00 00	if w2 == 5 goto +2 <LBB0_6>
      22:	b4 01 00 00 00 00 00 00	w1 = 0
      23:	56 02 02 00 02 00 00 00	if w2 != 2 goto +2 <LBB0_7>

00000000000000c0 <LBB0_6>:
      24:	54 00 00 00 ff ff 00 00	w0 &= 65535
      25:	bc 01 00 00 00 00 00 00	w1 = w0

00000000000000d0 <LBB0_7>:
      26:	bc 10 00 00 00 00 00 00	w0 = w1
      27:	95 00 00 00 00 00 00 00	exit
