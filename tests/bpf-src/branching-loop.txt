
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 00 00 00 00	r1 = 0
       1:	85 00 00 00 02 00 00 00	call 2
       2:	bf 06 00 00 00 00 00 00	r6 = r0
       3:	b7 01 00 00 64 00 00 00	r1 = 100
       4:	85 00 00 00 02 00 00 00	call 2
       5:	bf 07 00 00 00 00 00 00	r7 = r0
       6:	b7 01 00 00 e8 03 00 00	r1 = 1000
       7:	85 00 00 00 02 00 00 00	call 2
       8:	67 00 00 00 20 00 00 00	r0 <<= 32
       9:	77 00 00 00 20 00 00 00	r0 >>= 32
      10:	bf 08 00 00 00 00 00 00	r8 = r0
      11:	37 08 00 00 07 00 00 00	r8 /= 7
      12:	3d 78 0f 00 00 00 00 00	if r8 >= r7 goto +15 <LBB0_9>
      13:	b7 01 00 00 07 00 00 00	r1 = 7
      14:	2d 01 0d 00 00 00 00 00	if r1 > r0 goto +13 <LBB0_9>
      15:	b7 09 00 00 64 00 00 00	r9 = 100
      16:	b7 07 00 00 00 00 00 00	r7 = 0

0000000000000088 <LBB0_3>:
      17:	bf 72 00 00 00 00 00 00	r2 = r7
      18:	67 02 00 00 20 00 00 00	r2 <<= 32
      19:	77 02 00 00 20 00 00 00	r2 >>= 32
      20:	55 02 09 00 64 00 00 00	if r2 != 100 goto +9 <LBB0_5>
      21:	b7 01 00 00 00 00 00 00	r1 = 0
      22:	73 16 00 00 00 00 00 00	*(u8 *)(r6 + 0) = r1

00000000000000b8 <LBB0_8>:
      23:	07 07 00 00 01 00 00 00	r7 += 1
      24:	bf 71 00 00 00 00 00 00	r1 = r7
      25:	67 01 00 00 20 00 00 00	r1 <<= 32
      26:	77 01 00 00 20 00 00 00	r1 >>= 32
      27:	2d 18 f5 ff 00 00 00 00	if r8 > r1 goto -11 <LBB0_3>

00000000000000e0 <LBB0_9>:
      28:	b7 00 00 00 00 00 00 00	r0 = 0
      29:	95 00 00 00 00 00 00 00	exit

00000000000000f0 <LBB0_5>:
      30:	b7 01 00 00 01 00 00 00	r1 = 1
      31:	2d 29 01 00 00 00 00 00	if r9 > r2 goto +1 <LBB0_7>
      32:	b7 01 00 00 00 00 00 00	r1 = 0

0000000000000108 <LBB0_7>:
      33:	85 00 00 00 01 00 00 00	call 1
      34:	05 00 f4 ff 00 00 00 00	goto -12 <LBB0_8>
