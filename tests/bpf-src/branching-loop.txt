
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 00 00 00 00	r1 = 0
       1:	85 00 00 00 02 00 00 00	call 2
       2:	bf 06 00 00 00 00 00 00	r6 = r0
       3:	b7 01 00 00 64 00 00 00	r1 = 100
       4:	85 00 00 00 02 00 00 00	call 2
       5:	bf 07 00 00 00 00 00 00	r7 = r0
       6:	b7 01 00 00 e8 03 00 00	r1 = 1000
       7:	85 00 00 00 02 00 00 00	call 2
       8:	bc 08 00 00 00 00 00 00	w8 = w0
       9:	34 08 00 00 07 00 00 00	w8 /= 7
      10:	bd 87 07 00 00 00 00 00	if r7 <= r8 goto +7 <LBB0_9>
      11:	a6 00 06 00 07 00 00 00	if w0 < 7 goto +6 <LBB0_9>
      12:	b4 07 00 00 00 00 00 00	w7 = 0
      13:	b4 09 00 00 00 00 00 00	w9 = 0

0000000000000070 <LBB0_3>:
      14:	56 09 05 00 64 00 00 00	if w9 != 100 goto +5 <LBB0_5>
      15:	73 76 00 00 00 00 00 00	*(u8 *)(r6 + 0) = r7

0000000000000080 <LBB0_8>:
      16:	04 09 00 00 01 00 00 00	w9 += 1
      17:	ae 89 fc ff 00 00 00 00	if w9 < w8 goto -4 <LBB0_3>

0000000000000090 <LBB0_9>:
      18:	b4 00 00 00 00 00 00 00	w0 = 0
      19:	95 00 00 00 00 00 00 00	exit

00000000000000a0 <LBB0_5>:
      20:	b4 01 00 00 01 00 00 00	w1 = 1
      21:	a6 09 01 00 64 00 00 00	if w9 < 100 goto +1 <LBB0_7>
      22:	b4 01 00 00 00 00 00 00	w1 = 0

00000000000000b8 <LBB0_7>:
      23:	85 00 00 00 01 00 00 00	call 1
      24:	05 00 f7 ff 00 00 00 00	goto -9 <LBB0_8>
