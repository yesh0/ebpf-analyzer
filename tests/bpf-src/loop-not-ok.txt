
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 01 00 00 00 00 00 00	r1 = 0
       1:	63 1a fc ff 00 00 00 00	*(u32 *)(r10 - 4) = r1
       2:	7b 1a f0 ff 00 00 00 00	*(u64 *)(r10 - 16) = r1
       3:	63 1a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r1
       4:	05 00 00 00 00 00 00 00	goto +0 <LBB0_1>

0000000000000028 <LBB0_1>:
       5:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
       6:	15 01 0d 00 64 00 00 00	if r1 == 100 goto +13 <LBB0_6>
       7:	05 00 00 00 00 00 00 00	goto +0 <LBB0_2>

0000000000000040 <LBB0_2>:
       8:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
       9:	55 01 05 00 63 00 00 00	if r1 != 99 goto +5 <LBB0_4>
      10:	05 00 00 00 00 00 00 00	goto +0 <LBB0_3>

0000000000000058 <LBB0_3>:
      11:	79 a2 f0 ff 00 00 00 00	r2 = *(u64 *)(r10 - 16)
      12:	b7 01 00 00 00 00 00 00	r1 = 0
      13:	73 12 00 00 00 00 00 00	*(u8 *)(r2 + 0) = r1
      14:	05 00 00 00 00 00 00 00	goto +0 <LBB0_4>

0000000000000078 <LBB0_4>:
      15:	05 00 00 00 00 00 00 00	goto +0 <LBB0_5>

0000000000000080 <LBB0_5>:
      16:	61 a1 ec ff 00 00 00 00	r1 = *(u32 *)(r10 - 20)
      17:	07 01 00 00 01 00 00 00	r1 += 1
      18:	63 1a ec ff 00 00 00 00	*(u32 *)(r10 - 20) = r1
      19:	05 00 f1 ff 00 00 00 00	goto -15 <LBB0_1>

00000000000000a0 <LBB0_6>:
      20:	b7 00 00 00 00 00 00 00	r0 = 0
      21:	95 00 00 00 00 00 00 00	exit
