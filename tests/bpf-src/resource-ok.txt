
<stdin>:	file format elf64-bpf

Disassembly of section .text:

0000000000000000 <main>:
       0:	b7 06 00 00 00 00 00 00	r6 = 0
       1:	bf a7 00 00 00 00 00 00	r7 = r10
       2:	07 07 00 00 08 fe ff ff	r7 += -504

0000000000000018 <LBB0_1>:
       3:	bf 61 00 00 00 00 00 00	r1 = r6
       4:	85 00 00 00 03 00 00 00	call 3
       5:	7b 07 00 00 00 00 00 00	*(u64 *)(r7 + 0) = r0
       6:	07 07 00 00 08 00 00 00	r7 += 8
       7:	07 06 00 00 01 00 00 00	r6 += 1
       8:	55 06 fa ff 3f 00 00 00	if r6 != 63 goto -6 <LBB0_1>
       9:	b7 07 00 00 40 00 00 00	r7 = 64
      10:	bf a8 00 00 00 00 00 00	r8 = r10
      11:	07 08 00 00 f8 ff ff ff	r8 += -8

0000000000000060 <LBB0_3>:
      12:	79 86 00 00 00 00 00 00	r6 = *(u64 *)(r8 + 0)
      13:	bf 61 00 00 00 00 00 00	r1 = r6
      14:	85 00 00 00 04 00 00 00	call 4
      15:	bf 61 00 00 00 00 00 00	r1 = r6
      16:	85 00 00 00 05 00 00 00	call 5
      17:	07 08 00 00 f8 ff ff ff	r8 += -8
      18:	07 07 00 00 ff ff ff ff	r7 += -1
      19:	25 07 f8 ff 01 00 00 00	if r7 > 1 goto -8 <LBB0_3>
      20:	b4 00 00 00 00 00 00 00	w0 = 0
      21:	95 00 00 00 00 00 00 00	exit
