import{_ as e,c as a,o as l,a as t}from"./app.3775c9dd.js";const b=JSON.parse('{"title":"Syscall Entrance","description":"","frontmatter":{},"headers":[{"level":2,"title":"BPF_PROG_LOAD","slug":"bpf-prog-load","link":"#bpf-prog-load","children":[]}],"relativePath":"impl/syscall.md","lastUpdated":1672991337000}'),r={name:"impl/syscall.md"},c=t('<h1 id="syscall-entrance" tabindex="-1">Syscall Entrance <a class="header-anchor" href="#syscall-entrance" aria-hidden="true">#</a></h1><h2 id="bpf-prog-load" tabindex="-1"><code>BPF_PROG_LOAD</code> <a class="header-anchor" href="#bpf-prog-load" aria-hidden="true">#</a></h2><p>Processed by <a href="https://github.com/torvalds/linux/blob/4dc12f37a8e98e1dca5521c14625c869537b50b6/kernel/bpf/syscall.c#L2463-L2655" target="_blank" rel="noreferrer"><code>bpf_prog_load</code></a>, which:</p><ol><li>Checks the permission, the flags, license compatibility;</li><li>Initializes a <code>struct bpf_prog</code>;</li><li>Runs the verifier with <a href="./../verifier/verifier.html"><code>bpf_check</code></a>;</li><li>Tries to JIT the program with <code>bpf_prog_select_runtime</code>;</li><li>Allocates an ID to the program, and maybe calls <code>bpf_prog_kallsyms_add</code> (no idea what it does).</li></ol>',4),o=[c];function s(i,d,n,_,p,h){return l(),a("div",null,o)}const m=e(r,[["render",s]]);export{b as __pageData,m as default};
